{"version":3,"sources":["assets/img/loader.svg","components/Table/Table.jsx","components/InitApp/InitApp.jsx","components/Loader/Loader.jsx","components/Pagination/Paginator.jsx","components/AddForm/AddForm.jsx","components/Search/Search.jsx","components/PersonalInfo/PersonalInfo.jsx","App.js","index.js"],"names":["module","exports","Table","data","sortData","sortType","sortedField","onSelect","selectedUser","className","cn","onClick","map","item","index","key","id","firstName","lastName","email","phone","InitApp","fetchData","smallDataURL","bigDataURL","Loader","src","loader","alt","Paginator","length","currentPage","itemsCountPerPage","handlePageChange","activePage","totalItemsCount","onChange","page","pageRangeDisplayed","innerClass","itemClass","activeClass","linkClass","activeLinkClass","prevPageText","nextPageText","AddForm","handleClosePop","addPopVisible","onSubmitAddForm","useForm","register","handleSubmit","errors","reset","onSubmit","type","ref","required","name","minLength","pattern","value","message","Search","filterData","useState","searchText","setSearchText","placeholder","e","target","onKeyDown","toLowerCase","PersonalInfo","user","description","readOnly","address","streetAddress","city","state","zip","App","filteredData","init","isFetching","URL","a","setState","axios","get","console","log","copyData","concat","sortedData","_","orderBy","copyFiltered","sortedFilteredData","text","filter","includes","toString","handleAddClick","chunkData","chunk","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5958f98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.4b371f16.svg\";","import React from 'react';\nimport cn from 'classnames';\n\nimport './Table.scss'\n\nconst Table = ({data, sortData, sortType, sortedField, onSelect, selectedUser}) => {\n    return (\n        <table className=\"table\">\n            <thead>\n            <tr className=\"table__header\">\n                <th className=\"table__header-raw\">\n                    <span className={cn(`table__header-title ${sortType}`, {\"sorted\": sortedField === 'id'})} onClick={() => sortData('id')}>ID</span>\n                </th>\n                <th className=\"table__header-raw\">\n                    <span className={cn(`table__header-title ${sortType}`, {\"sorted\": sortedField === 'firstName'})}\n                          onClick={() => sortData('firstName')}>First Name</span>\n                </th>\n                <th className=\"table__header-raw\">\n                    <span className={cn(`table__header-title ${sortType}`, {\"sorted\": sortedField === 'lastName'})}\n                          onClick={() => sortData('lastName')}>Last Name</span>\n                </th>\n                <th className=\"table__header-raw\">\n                    <span className={cn(`table__header-title ${sortType}`, {\"sorted\": sortedField === 'email'})}\n                          onClick={() => sortData('email')}>Email</span>\n                </th>\n                <th className=\"table__header-raw\">\n                    <span className={cn(`table__header-title ${sortType}`, {\"sorted\": sortedField === 'phone'})}\n                          onClick={() => sortData('phone')}>Phone</span>\n                </th>\n            </tr>\n            </thead>\n            <tbody>\n            {data.map((item, index) => (\n                <tr className={cn(\"table__raw\", {'selected': index === selectedUser})} key={index} onClick={() => onSelect(index)}>\n                    <td className=\"table__cell\">{item.id}</td>\n                    <td className=\"table__cell\">{item.firstName}</td>\n                    <td className=\"table__cell\">{item.lastName}</td>\n                    <td className=\"table__cell\">{item.email}</td>\n                    <td className=\"table__cell\">{item.phone}</td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    )\n};\n\n\nexport default Table;","import React from 'react';\n\n\nimport './InitApp.scss'\n\nconst InitApp = ({fetchData, smallDataURL, bigDataURL}) => {\n    return (\n        <div className=\"init-app\">\n                <div className=\"init-app__buttons\">\n                    <button className=\"init-app__buttons--white\" onClick={() => fetchData(smallDataURL)}>32 elements</button>\n                    <button className=\"init-app__buttons--black\" onClick={() => fetchData(bigDataURL)}>1000 elements</button>\n                </div>\n        </div>\n    )\n};\n\n\nexport default InitApp;","import React from 'react';\n\n\nimport loader from '../../assets/img/loader.svg'\nimport './Loader.scss'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <img className=\"loader__img\" src={loader} alt=\"Loading...\"/>\n        </div>\n    )\n};\n\n\nexport default Loader;","import React from 'react';\nimport Pagination from \"react-js-pagination\";\n\nimport './Paginator.scss'\n\nconst Paginator = ({length, currentPage, itemsCountPerPage, handlePageChange}) => {\n    return (\n        <div className=\"paginator\">\n            <Pagination\n                activePage={currentPage}\n                itemsCountPerPage={itemsCountPerPage}\n                totalItemsCount={length}\n                onChange={page=> handlePageChange(page)}\n                pageRangeDisplayed={5}\n                innerClass=\"paginator__pagination\"\n                itemClass=\"paginator__elem\"\n                activeClass=\"paginator__elem--active\"\n                linkClass=\"paginator__link\"\n                activeLinkClass=\"paginator__link--active\"\n                prevPageText=\"prev\"\n                nextPageText=\"next\"\n            />\n        </div>\n    )\n};\n\n\nexport default Paginator;","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport cn from 'classnames';\n\nimport './AddForm.scss'\n\nconst AddForm = ({handleClosePop, addPopVisible, onSubmitAddForm}) => {\n    const {register, handleSubmit, errors, reset} = useForm();\n\n    return (\n        <div className={cn(\"add-form\", {\"visible\": addPopVisible})}>\n            <form className=\"add-form__form\" onSubmit={handleSubmit(onSubmitAddForm)}>\n                <h2 className=\"add-form__title\">Add User</h2>\n                <label className=\"add-form__label\">ID:\n                    <input type=\"number\" className=\"add-form__input\" ref={register({required: true})} name=\"id\"/>\n                </label>\n                {errors.id && <span className=\"add-form__error\">This field is required</span>}\n                <label className=\"add-form__label\">First Name:\n                    <input type=\"text\" className=\"add-form__input\" ref={register({required: true, minLength: 2})} name=\"firstName\"/>\n                </label>\n                {errors.firstName && errors.firstName.type === 'required' && <span className=\"add-form__error\">This field is required!</span>}\n                {errors.firstName && errors.firstName.type === 'minLength' && <span className=\"add-form__error\">First Name is too short.</span>}\n                <label className=\"add-form__label\">Last Name:\n                    <input type=\"text\" className=\"add-form__input\" ref={register({required: true, minLength: 2})} name=\"lastName\"/>\n                </label>\n                {errors.lastName && errors.lastName.type === 'required' && <span className=\"add-form__error\">This field is required</span>}\n                {errors.lastName && errors.lastName.type === 'minLength' && <span className=\"add-form__error\">Last Name is too short.</span>}\n                <label className=\"add-form__label\">Email:\n                    <input type=\"email\" className=\"add-form__input\" ref={register({\n                        required: true,\n                        pattern: {\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                            message: \"invalid email address\"\n                        }\n                    })} name=\"email\"/>\n                </label>\n                {errors.email && errors.email.type === 'required' && <span className=\"add-form__error\">This field is required</span>}\n                {errors.email && <span className=\"add-form__error\">{errors.email.message}</span>}\n                <label className=\"add-form__label\">Phone:\n                    <input type=\"tel\" className=\"add-form__input\" ref={register({required: true})} name=\"phone\"/>\n                </label>\n                {errors.phone && <span className=\"add-form__error\">This field is required</span>}\n                <div className=\"add-form__buttons\">\n                    <button className=\"add-form__button--black\" type=\"button\" onClick={() => {\n                        handleClosePop();\n                        reset()\n                    }}>Close\n                    </button>\n                    <button className=\"add-form__button--white\" type=\"submit\">Add</button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\n\nexport default AddForm;","import React, {useState} from 'react';\n\n\nimport './Search.scss'\n\nconst Search = ({filterData}) => {\n    const [searchText, setSearchText] = useState(\"\");\n    return (\n        <div className=\"search\">\n            <ion-icon name=\"search-circle-outline\"/>\n            <input type=\"text\" className=\"search__input\" placeholder=\"Search\" value={searchText}\n                   onChange={e => setSearchText(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && filterData(searchText.toLowerCase())}/>\n        </div>\n    )\n};\n\n\nexport default Search;","import React from 'react';\n\n\nimport './PersonalInfo.scss'\n\nconst PersonalInfo = ({user}) => {\n    return (\n        <div className=\"personal-info\">\n            <div className=\"personal-info__inner\">\n                <h3 className=\"personal-info__title\">User Details</h3>\n                <div className=\"personal-info__elem\">\n                    <p className=\"personal-info__name\">{`User selected: ${user.firstName} ${user.lastName}`}</p>\n                </div>\n                {user.description && <div className=\"personal-info__description\">\n                    <div className=\"personal-info__elem\">\n                        <p className=\"personal-info__description-title\">Description:</p>\n                        <textarea className=\"personal-info__description-elem\" value={user.description} readOnly/>\n                    </div>\n                    <div className=\"personal-info__elem\">\n                        <p className=\"personal-info__address\">{`Address: ${user.address.streetAddress}`}</p>\n                    </div>\n                    <div className=\"personal-info__elem\">\n                        <p className=\"personal-info__city\">{`City: ${user.address.city}`}</p>\n                    </div>\n                    <div className=\"personal-info__elem\">\n                        <p className=\"personal-info__state\">{`Province/State: ${user.address.state}`}</p>\n                    </div>\n                    <div className=\"personal-info__elem\">\n                        <p className=\"personal-info__zip\">{`ZIP Code: ${user.address.zip}`}</p>\n                    </div>\n                </div>}\n            </div>\n        </div>\n    )\n};\n\n\nexport default PersonalInfo;","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport _ from \"lodash\"\n\nimport Table from \"./components/Table/Table\";\nimport InitApp from \"./components/InitApp/InitApp\";\nimport Loader from \"./components/Loader/Loader\";\nimport Paginator from \"./components/Pagination/Paginator\";\nimport AddForm from \"./components/AddForm/AddForm\";\nimport Search from \"./components/Search/Search\";\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo\";\n\n\nclass App extends Component {\n\n    state = {\n        selectedUser: '',\n        filteredData: 'none',\n        init: false,\n        isFetching: false,\n        addPopVisible: false,\n        data: [],\n        sortedField: '',\n        sortType: 'desc',\n        currentPage: 1,\n        itemsCountPerPage: 32,\n        smallDataURL: 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n        bigDataURL: 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}',\n    };\n\n    fetchData = async (URL) => {\n        try {\n            this.setState({isFetching: true});\n            const {data} = await axios.get(URL);\n            this.setState({data});\n            this.setState({init: true});\n            this.setState({isFetching: false});\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    sortData = sortedField => {\n        const copyData = this.state.data.concat();\n        const sortType = this.state.sortType === 'asc' ? 'desc' : 'asc';\n        const sortedData = _.orderBy(copyData, sortedField, sortType);\n        if (this.state.filteredData !== 'none') {\n            const copyFiltered = this.state.filteredData.concat();\n            const sortedFilteredData = _.orderBy(copyFiltered, sortedField, sortType);\n            this.setState({\n                filteredData: sortedFilteredData,\n                selectedUser: ''\n            })\n        }\n        this.setState({\n            sortedField,\n            sortType,\n            data: sortedData,\n            selectedUser: ''\n        })\n    };\n\n    filterData = text => {\n        if (text) {\n            const filteredData = this.state.data.filter(item => {\n                if (item.firstName.toLowerCase().includes(text)\n                    || item.lastName.toLowerCase().includes(text)\n                    || item.email.toLowerCase().includes(text)\n                    || item.id.toString().includes(text)\n                    || item.phone.includes(text)\n                ) {\n                    return item\n                }\n                return ''\n            });\n            this.setState({\n                filteredData,\n                selectedUser: ''\n            })\n        } else {\n            this.setState({\n                filteredData: 'none'\n            })\n        }\n\n    };\n\n    handlePageChange = page => {\n        this.setState({\n            currentPage: page,\n            selectedUser: ''\n        })\n    };\n\n    handleAddClick = () => {\n        this.setState({\n            addPopVisible: true,\n        })\n    };\n\n    handleClosePop = () => {\n        this.setState({\n            addPopVisible: false,\n        })\n    };\n\n    onSubmitAddForm = (data, e) => {\n        this.setState({\n            data: [data, ...this.state.data]\n        });\n        this.handleClosePop();\n        e.target.reset()\n    };\n\n    onSelect = index => {\n        this.setState({\n            selectedUser: index\n        });\n    };\n\n    chunkData = data => _.chunk(data, this.state.itemsCountPerPage)[this.state.currentPage - 1]\n\n    render() {\n        if (!this.state.init) {\n            return !this.state.isFetching ?\n                <InitApp fetchData={this.fetchData} smallDataURL={this.state.smallDataURL} bigDataURL={this.state.bigDataURL}/> : <Loader/>\n        }\n\n        return (\n            <div className=\"table-app\">\n                <div className=\"container\">\n                    <h1 className=\"table-app__title\">users table app</h1>\n                    <div className=\"wrapper-top\">\n                        <button className=\"table-app__add-elements\" onClick={this.handleAddClick}>\n                            <ion-icon className=\"table-app__add\" name=\"add-circle-outline\"/>\n                            <span className=\"table-app__add-text\">Add</span>\n                        </button>\n\n                        <AddForm handleClosePop={this.handleClosePop} addPopVisible={this.state.addPopVisible}\n                                 onSubmitAddForm={this.onSubmitAddForm}/>\n\n                        <Search filterData={this.filterData}/>\n                    </div>\n\n                    <Table data={\n                        this.state.filteredData === 'none'\n                            ? this.chunkData(this.state.data)\n                            : this.chunkData(this.state.filteredData)\n                    }\n                           sortData={this.sortData} sortType={this.state.sortType} selectedUser={this.state.selectedUser}\n                           sortedField={this.state.sortedField} onSelect={this.onSelect}/>\n\n                    {this.state.filteredData === 'none' && this.state.data.length > this.state.itemsCountPerPage\n                        ? <Paginator length={this.state.data.length} currentPage={this.state.currentPage}\n                                     itemsCountPerPage={this.state.itemsCountPerPage} handlePageChange={this.handlePageChange}/>\n                        : this.state.filteredData.length > this.state.itemsCountPerPage\n                            ? <Paginator length={this.state.filteredData.length} currentPage={this.state.currentPage}\n                                         itemsCountPerPage={this.state.itemsCountPerPage} handlePageChange={this.handlePageChange}/>\n                            : ''\n                    }\n\n                    {this.state.selectedUser || this.state.selectedUser === 0\n                        ? <PersonalInfo user={\n                            this.state.filteredData === 'none'\n                                ? this.chunkData(this.state.data)[this.state.selectedUser]\n                                : this.chunkData(this.state.filteredData)[this.state.selectedUser]\n                        }/> : ''\n                    }\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}